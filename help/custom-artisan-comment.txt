Microsoft Windows [Version 10.0.19045.4412]
(c) Microsoft Corporation. All rights reserved.

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan make:command newtodos

   INFO  Console command [D:\xampp8240\htdocs\ROUND57\Laravel\todo\app\Console\Commands\newtodos.php] created successfully.


D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan inspire

  “ Act only according to that maxim whereby you can, at the same time, will that it should become a universal law. ”
  — Immanuel Kant


D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan inspire

  “ Walk as if you are kissing the Earth with your feet. ”
  — Thich Nhat Hanh


D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan app:newtodos 6
Sending email to: 6!

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan app:newtodos 6
Sending email to: 6!

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos 6

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos 6
Created 6!

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos 6


  Command "newtodos" is not defined.


 Do you want to run "app:newtodos" instead?  (yes/no) [no]:
 > yes



  No arguments expected for "newtodos" command, got "6".



D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos 6


  Command "newtodos" is not defined.


 Do you want to run "app:newtodos" instead?  (yes/no) [no]:
 > yes


 What is your name?:
 > sdg


D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos 6


  Not enough arguments (missing: "m").



D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos 6 hi

 What is your name?:
 > IDB

getting todos for IDB with id: 6 and message: hi

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos 6 h

 What is your name?:
 > sdaff

getting todos for sdaff with id: 6 and message: h

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan clearall
Cleared!

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan list

   ParseError

  syntax error, unexpected token "require"

  at routes\web.php:84
     80▕     Artisan::call('view:clear');
     81▕     dd("view cleared");
     82▕ })
     83▕
  ➜  84▕ require __DIR__.'/auth.php';
     85▕

  1   vendor\laravel\framework\src\Illuminate\Routing\Router.php:511
      Illuminate\Routing\RouteFileRegistrar::register("D:\xampp8240\htdocs\ROUND57\Laravel\todo\bootstrap/../routes/web.php")

  2   vendor\laravel\framework\src\Illuminate\Routing\Router.php:465
      Illuminate\Routing\Router::loadRoutes("D:\xampp8240\htdocs\ROUND57\Laravel\todo\bootstrap/../routes/web.php")


D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan list
Laravel Framework 11.5.0

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display help for the given command. When no command is given display help for the list command
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi|--no-ansi  Force (or disable --no-ansi) ANSI output
  -n, --no-interaction  Do not ask any interactive question
      --env[=ENV]       The environment the command should run under
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  about                     Display basic information about your application
  clear-compiled            Remove the compiled class file
  clearall                  Clear all caches
  completion                Dump the shell completion script
  db                        Start a new database CLI session
  docs                      Access the Laravel documentation
  down                      Put the application into maintenance / demo mode
  env                       Display the current framework environment
  help                      Display help for a command
  inspire                   Display an inspiring quote
  list                      List commands
  migrate                   Run the database migrations
  newtodos                  Create New Todos
  optimize                  Cache framework bootstrap, configuration, and metadata to increase performance
  serve                     Serve the application on the PHP development server
  test                      Run the application tests
  tinker                    Interact with your application
  up                        Bring the application out of maintenance mode
 auth
  auth:clear-resets         Flush expired password reset tokens
 breeze
  breeze:install            Install the Breeze controllers and resources
 cache
  cache:clear               Flush the application cache
  cache:forget              Remove an item from the cache
  cache:prune-stale-tags    Prune stale cache tags from the cache (Redis only)
 channel
  channel:list              List all registered private broadcast channels
 config
  config:cache              Create a cache file for faster configuration loading
  config:clear              Remove the configuration cache file
  config:publish            Publish configuration files to your application
  config:show               Display all of the values for a given configuration file
 db
  db:monitor                Monitor the number of connections on the specified database
  db:seed                   Seed the database with records
  db:show                   Display information about the given database
  db:table                  Display information about the given database table
  db:wipe                   Drop all tables, views, and types
 debugbar
  debugbar:clear            Clear the Debugbar Storage
 env
  env:decrypt               Decrypt an environment file
  env:encrypt               Encrypt an environment file
 event
  event:cache               Discover and cache the application's events and listeners
  event:clear               Clear all cached events and listeners
  event:list                List the application's events and listeners
 install
  install:api               Create an API routes file and install Laravel Sanctum or Laravel Passport
  install:broadcasting      Create a broadcasting channel routes file
 key
  key:generate              Set the application key
 lang
  lang:publish              Publish all language files that are available for customization
 make
  make:cache-table          [cache:table] Create a migration for the cache database table
  make:cast                 Create a new custom Eloquent cast class
  make:channel              Create a new channel class
  make:class                Create a new class
  make:command              Create a new Artisan command
  make:component            Create a new view component class
  make:controller           Create a new controller class
  make:enum                 Create a new enum
  make:event                Create a new event class
  make:exception            Create a new custom exception class
  make:factory              Create a new model factory
  make:interface            Create a new interface
  make:job                  Create a new job class
  make:listener             Create a new event listener class
  make:mail                 Create a new email class
  make:middleware           Create a new middleware class
  make:migration            Create a new migration file
  make:model                Create a new Eloquent model class
  make:notification         Create a new notification class
  make:notifications-table  [notifications:table] Create a migration for the notifications table
  make:observer             Create a new observer class
  make:policy               Create a new policy class
  make:provider             Create a new service provider class
  make:queue-batches-table  [queue:batches-table] Create a migration for the batches database table
  make:queue-failed-table   [queue:failed-table] Create a migration for the failed queue jobs database table
  make:queue-table          [queue:table] Create a migration for the queue jobs database table
  make:request              Create a new form request class
  make:resource             Create a new resource
  make:rule                 Create a new validation rule
  make:scope                Create a new scope class
  make:seeder               Create a new seeder class
  make:session-table        [session:table] Create a migration for the session database table
  make:test                 Create a new test class
  make:trait                Create a new trait
  make:view                 Create a new view
 migrate
  migrate:fresh             Drop all tables and re-run all migrations
  migrate:install           Create the migration repository
  migrate:refresh           Reset and re-run all migrations
  migrate:reset             Rollback all database migrations
  migrate:rollback          Rollback the last database migration
  migrate:status            Show the status of each migration
 model
  model:prune               Prune models that are no longer needed
  model:show                Show information about an Eloquent model
 optimize
  optimize:clear            Remove the cached bootstrap files
 package
  package:discover          Rebuild the cached package manifest
 queue
  queue:clear               Delete all of the jobs from the specified queue
  queue:failed              List all of the failed queue jobs
  queue:flush               Flush all of the failed queue jobs
  queue:forget              Delete a failed queue job
  queue:listen              Listen to a given queue
  queue:monitor             Monitor the size of the specified queues
  queue:prune-batches       Prune stale entries from the batches database
  queue:prune-failed        Prune stale entries from the failed jobs table
  queue:restart             Restart queue worker daemons after their current job
  queue:retry               Retry a failed queue job
  queue:retry-batch         Retry the failed jobs for a batch
  queue:work                Start processing jobs on the queue as a daemon
 route
  route:cache               Create a route cache file for faster route registration
  route:clear               Remove the route cache file
  route:list                List all registered routes
 sail
  sail:add                  Add a service to an existing Sail installation
  sail:install              Install Laravel Sail's default Docker Compose file
  sail:publish              Publish the Laravel Sail Docker files
 sanctum
  sanctum:prune-expired     Prune tokens expired for more than specified number of hours
 schedule
  schedule:clear-cache      Delete the cached mutex files created by scheduler
  schedule:interrupt        Interrupt the current schedule run
  schedule:list             List all scheduled tasks
  schedule:run              Run the scheduled commands
  schedule:test             Run a scheduled command
  schedule:work             Start the schedule worker
 schema
  schema:dump               Dump the given database schema
 storage
  storage:link              Create the symbolic links configured for the application
  storage:unlink            Delete existing symbolic links configured for the application
 stub
  stub:publish              Publish all stubs that are available for customization
 vendor
  vendor:publish            Publish any publishable assets from vendor packages
 view
  view:cache                Compile all of the application's Blade templates
  view:clear                Clear all compiled view files

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan clearall
Cleared!

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos

 Value of name?:
 > P

 Value of n?:
 > 4

 Value of m?:
 > 90

getting todos for P with id: 4 and message: 90

D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos

 How many fake todos?:
 > 5


D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan newtodos

 How many fake todos?:
 > 7


D:\xampp8240\htdocs\ROUND57\Laravel\todo>php artisan make:component Footer

   INFO  Component [D:\xampp8240\htdocs\ROUND57\Laravel\todo\app\View\Components\Footer.php] created successfully.


D:\xampp8240\htdocs\ROUND57\Laravel\todo>